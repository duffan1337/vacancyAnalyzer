{"version":3,"sources":["api/api.js","Redux/Reducers/vacancyReducer.js","Redux/Actions/vacancyAC.js","Components/Search/search.jsx","Components/Charts/SkillsChart/SkillsChart.jsx","Components/Charts/ExperienceChart/experienceChart.jsx","Components/Charts/ScheduleChart/scheduleChart.jsx","Components/Charts/SalaryByExperienceChart/salaryByExperienceChart.jsx","Components/Charts/CitiesChart/CitiesChart.jsx","Components/ProgressBar/progressBar.js","Components/StatBlock/statBlock.jsx","App.jsx","reportWebVitals.js","Redux/store.js","index.js"],"names":["instance","axios","create","baseURL","searchAPI","text","pages","region","console","log","get","headers","then","response","data","catch","error","id","errors","captcha_url","window","open","document","location","origin","getCurrency","initialState","vacancy","detailedVacancy","isLoaded","vacancyName","top10Skills","experience","schedule","salaryByExperience","salaryStat","cities","currentPage","allDataLoaded","getSalaryStat","vacancies","currencies","salary","getSalary","allSalary","from","concat","to","min","Math","max","middle","trunc","reduce","a","b","length","setSchedule","items","arrayOfEmployment","map","item","EmploymentStat","remote","fullDay","flexible","x","setExperience","arrayOfExperience","ExperienceStat","between1And3","between3And6","noExperience","moreThan6","setTop10Skills","keySkillsStats","Array","el","key_skills","name","prev","cur","sortable","count","push","sort","slice","setCities","filter","address","city","setSalaryByExperience","vacancyItems","ExperienceBySalary","AVGbetween1And3","getAvg","AVGbetween3And6","AVGnoExperience","AVGmoreThan6","Vacancy","HHCurrencies","KZT","RUR","RUB","BYR","BYN","USD","EUR","UAH","currency","grades","total","acc","c","getAllVacancies","vacanciesName","dispatch","type","payload","addAllVacancy","getADetailedVacancies","getAllVacanciesOnAllPages","getCurrentVacancy","forEach","element","state","action","obj","Search","useState","setVacanciesName","className","onClick","value","placeholder","onChange","e","target","SkillsChart","keySkills","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","labels","datasets","label","borderColor","backgroundColor","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","ArcElement","ExperienceChart","ScheduleChart","SalaryByExperienceChart","experienceBySalary","CitiesChart","ProgressBar","props","bgcolor","completed","fillerStyles","height","width","borderRadius","textAlign","transition","style","margin","padding","color","fontWeight","StatBlock","statElement","statName","icon","isVisible","regions","code","App","useSelector","pageLoad","allPage","setCurrencies","selectedRegion","setSelectedRegion","modalOpen","setModalOpen","useDispatch","useEffect","conversion_rates","exportToPDF","input","getElementById","html2pdf","filename","image","quality","html2canvas","dpi","letterRendering","jsPDF","unit","format","orientation","htmlFor","class","event","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4459fe89.chunk.js","sourcesContent":["// import axios from \"axios\"\r\n\r\n// export const instance =  axios.create({\r\n//     baseURL:'http://127.0.0.1:8000/',\r\n// })\r\n\r\n// //area=16 Belarus\r\n// export const searchAPI={\r\n//     // getAllVacanciesByName(text = \"javascript\", pages=0) {\r\n//     //     return instance.get(`vacancies?text=${text}&only_with_salary=true&page=${pages}&per_page=100&area=16`\r\n//     //     ).then(response => response.data)\r\n//     // },\r\n//     getAllVacanciesByName(text = \"javascript\", pages=0) {\r\n//         return instance.get(`vacancies/?text=${text}&pages=${pages}`,\r\n//         ).then(response => response.data)\r\n//     },\r\n\r\n//     getVacancyById(id) {\r\n//         return instance.get(`vacancies/${id}`\r\n//         ).then(response =>response.data)\r\n//         .catch((error)=>\r\n            \r\n//             // document.location.href = error.response.data.errors[0].captcha_url + '&backurl=' + document.location.origin\r\n//             window.open(error.response.data.errors[0].captcha_url + '&backurl=' + document.location.origin)\r\n//         )\r\n// }\r\n// }\r\n\r\n\r\n// export const getCurrency={\r\n//     getCurrencyValues(){\r\n//         return axios.get(\"https://v6.exchangerate-api.com/v6/4f44d7ad6be4d970e8ecc92e/latest/USD/\").then(response => response.data);\r\n//     }\r\n// }\r\n\r\nimport axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.hh.ru/',\r\n});\r\n\r\nexport const searchAPI = {\r\n    getAllVacanciesByName(text = \"javascript\", pages = 0, region = 16) {\r\n        console.log(region)\r\n        return instance.get(`vacancies?text=${text}&only_with_salary=true&page=${pages}&per_page=50&area=${region}`, {\r\n            headers: {\r\n                'Authorization': `Bearer USERLHQPCJIAG6L8FI1SUDKRFDDGHVL6AO713JK51TLD8168JQ00IT63DPUFKN98`\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                console.error(\"Error fetching vacancies:\", error);\r\n                throw error;\r\n            });\r\n    },\r\n\r\n    getVacancyById(id) {\r\n        return instance.get(`vacancies/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer USERLHQPCJIAG6L8FI1SUDKRFDDGHVL6AO713JK51TLD8168JQ00IT63DPUFKN98`\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                if (error.response && error.response.data.errors && error.response.data.errors[0].captcha_url) {\r\n                    window.open(error.response.data.errors[0].captcha_url + '&backurl=' + document.location.origin);\r\n                } else {\r\n                    console.error(\"Error fetching vacancy by ID:\", error);\r\n                }\r\n                throw error;\r\n            });\r\n    }\r\n}\r\n\r\nexport const getCurrency = {\r\n    getCurrencyValues() {\r\n        return axios.get(\"https://v6.exchangerate-api.com/v6/4f44d7ad6be4d970e8ecc92e/latest/USD/\")\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                console.error(\"Error fetching currency data:\", error);\r\n                throw error;\r\n            });\r\n    }\r\n}\r\n","import { searchAPI } from \"../../api/api\";\r\nimport { addAllData, addAllVacancy, addAllVacancy2, addVacancyById, addVacancyName, setCurrentPage } from \"../Actions/vacancyAC\";\r\nimport { getCurrency } from '../../api/api';\r\nconst initialState={\r\n    vacancy: [],\r\n    detailedVacancy: [],\r\n    isLoaded:false,\r\n\r\n    vacancyName:\"\",\r\n    top10Skills:[],\r\n    experience:[],\r\n    schedule:[],\r\n    salaryByExperience:[],\r\n    salaryStat:{ },\r\n    cities:[],\r\n\r\n    currentPage:0,\r\n    pages:0,\r\n    allDataLoaded:false\r\n}\r\n\r\nexport const getSalaryStat = (vacancies, currencies)=>{\r\n\r\n  let salary = getSalary(vacancies,currencies)\r\n  let allSalary = salary.from.concat(salary.to)\r\n\r\n\r\n   const min = Math.min(...allSalary)\r\n   const max = Math.max(...allSalary)\r\n   const middle = Math.trunc(allSalary.reduce((a, b) => (a + b)) / allSalary.length);\r\n   return {\r\n      max:max,\r\n      min:min,\r\n      middle:middle\r\n    }\r\n}\r\n\r\n\r\nexport const setSchedule = (items) =>{\r\n    let arrayOfEmployment = items.map(item =>{\r\n      return item.schedule\r\n    })\r\n\r\n    let EmploymentStat={remote:0, fullDay:0,flexible:0}\r\n \r\n    for (let x in arrayOfEmployment) {\r\n      if(arrayOfEmployment[x].id ===\"remote\")\r\n      {\r\n        EmploymentStat= {...EmploymentStat, remote: EmploymentStat.remote+=1}\r\n      }\r\n      else if(arrayOfEmployment[x].id ===\"fullDay\")\r\n      {\r\n        EmploymentStat= {...EmploymentStat, fullDay: EmploymentStat.fullDay+=1}\r\n      } \r\n      else if(arrayOfEmployment[x].id ===\"flexible\")\r\n      { \r\n        EmploymentStat= {...EmploymentStat, flexible: EmploymentStat.flexible+=1}\r\n      } \r\n    }\r\n    return EmploymentStat\r\n  }\r\n\r\n  export const setExperience = (items) =>{\r\n    let arrayOfExperience = items.map(item =>{\r\n      return item.experience.id\r\n    })\r\n\r\n    let ExperienceStat={between1And3:0, between3And6:0,noExperience:0, moreThan6:0}\r\n \r\n    for (let x in arrayOfExperience) {\r\n      if(arrayOfExperience[x] ===\"between1And3\")\r\n      {\r\n        ExperienceStat= {...ExperienceStat, between1And3: ExperienceStat.between1And3+=1}\r\n      }\r\n      else if(arrayOfExperience[x] ===\"between3And6\")\r\n      {\r\n        ExperienceStat= {...ExperienceStat, between3And6: ExperienceStat.between3And6+=1}\r\n      }\r\n      else if(arrayOfExperience[x] ===\"noExperience\")\r\n      {\r\n        ExperienceStat= {...ExperienceStat, noExperience: ExperienceStat.noExperience+=1}\r\n      }\r\n      else if(arrayOfExperience[x] ===\"moreThan6\")\r\n      {\r\n        ExperienceStat= {...ExperienceStat, moreThan6: ExperienceStat.noExperience+=1}\r\n      }\r\n    }\r\n    return ExperienceStat\r\n  }\r\n\r\n  \r\n\r\n  export const setTop10Skills = (items) =>{\r\n    let keySkillsStats={items:[]}\r\n    Array.from(items, el=>Array.from(el.key_skills, (item) =>{keySkillsStats = {...keySkillsStats, items: [...keySkillsStats.items,item.name]}}))\r\n\r\n    let map = keySkillsStats.items.reduce(function(prev, cur) {\r\n      prev[cur] = (prev[cur] || 0) + 1;\r\n      return prev;\r\n    }, {});\r\n    \r\n    var sortable = [];\r\n    for (var count in map) {\r\n        sortable.push([count, map[count]]);\r\n    }\r\n    \r\n    let top = sortable.sort(function(a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n    let top10Skills = top.slice(0,10)\r\n    \r\n   return top10Skills   \r\n  }\r\n\r\n\r\n\r\n\r\n  export const setCities = (items) =>{\r\n\r\n    let filteredCitiesArray = items.filter(el => el.address !== null && el.address.city !== null).map(el => el.address.city)\r\n\r\n    let map = filteredCitiesArray.reduce(function(prev, cur) {\r\n      prev[cur] = (prev[cur] || 0) + 1;\r\n      return prev;\r\n    }, {});\r\n\r\n    let sortable = [];\r\n    for (const count in map) {\r\n        sortable.push([count, map[count]]);\r\n    }\r\n    let top = sortable.sort(function(a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n    let top10Cities = top.slice(0,10)\r\n\r\n   return top10Cities   \r\n  }\r\n  \r\n  export const setSalaryByExperience = (vacancyItems,currencies) =>{\r\n\r\n    let ExperienceBySalary={between1And3:[], between3And6:[],noExperience:[], moreThan6:[]}\r\n\r\n        for (let x in vacancyItems) {\r\n          if(vacancyItems[x].experience.id ===\"between1And3\")\r\n          {\r\n            ExperienceBySalary= {...ExperienceBySalary, between1And3: [...ExperienceBySalary.between1And3, vacancyItems[x]]}\r\n          }\r\n          else if(vacancyItems[x].experience.id ===\"between3And6\")\r\n          {\r\n            ExperienceBySalary= {...ExperienceBySalary, between3And6: [...ExperienceBySalary.between3And6, vacancyItems[x]]}\r\n          }\r\n          else if(vacancyItems[x].experience.id ===\"noExperience\")\r\n          {\r\n            ExperienceBySalary= {...ExperienceBySalary, noExperience: [...ExperienceBySalary.noExperience, vacancyItems[x]]}\r\n          }\r\n          else if(vacancyItems[x].experience.id ===\"moreThan6\")\r\n          {\r\n            ExperienceBySalary= {...ExperienceBySalary, moreThan6: [...ExperienceBySalary.moreThan6, vacancyItems[x]]}\r\n          }\r\n        }\r\n\r\n    \r\n          let between1And3 =getSalary(ExperienceBySalary.between1And3,currencies)\r\n          let between3And6=getSalary(ExperienceBySalary.between3And6,currencies)\r\n          let noExperience = getSalary(ExperienceBySalary.noExperience,currencies)\r\n          let moreThan6 =getSalary(ExperienceBySalary.moreThan6,currencies)\r\n          let AVGbetween1And3= getAvg(between1And3.from.concat(between1And3.to))\r\n          let AVGbetween3And6= getAvg(between3And6.from.concat(between3And6.to))\r\n          let AVGnoExperience= getAvg(noExperience.from.concat(noExperience.to))\r\n          let AVGmoreThan6= getAvg(moreThan6.from.concat(moreThan6.to))\r\n  \r\n        return {AVGnoExperience, AVGbetween1And3, AVGbetween3And6, AVGmoreThan6}       \r\n  }\r\n\r\n\r\n  export const getSalary = (Vacancy,currencies) =>{\r\n    console.log(currencies)\r\n    let HHCurrencies = {\r\n      KZT:currencies.KZT,\r\n      RUR:currencies.RUB,\r\n      BYR:currencies.BYN,\r\n      USD:currencies.USD,\r\n      EUR:currencies.EUR,\r\n      UAH:currencies.UAH,\r\n    }  \r\n    let filterFrom = Vacancy.filter(el => el.salary.from !== null && el.salary.from !== 0 )\r\n      let from = filterFrom.map(item => \r\n        {      \r\n          if(item.salary.currency !== \"USD\")\r\n          {\r\n            let el;\r\n            for (let currency in HHCurrencies) \r\n            {\r\n             if(currency===item.salary.currency)\r\n             {\r\n             el =Math.trunc((item.salary.from)/HHCurrencies[currency])\r\n             }\r\n             \r\n            }\r\n            return el\r\n      }\r\n      else\r\n      {\r\n        return item.salary.from\r\n      }\r\n    })\r\n           \r\n    let filterTo = Vacancy.filter(el => el.salary.to !== null && el.salary.to !==0 )\r\n    let to = filterTo.map(item => \r\n      {         \r\n        if(item.salary.currency !== \"USD\")\r\n        {\r\n          let el;\r\n          for (let currency in HHCurrencies) \r\n          {\r\n           if(currency===item.salary.currency)\r\n           {\r\n           el=Math.trunc(item.salary.to / HHCurrencies[currency])\r\n           }\r\n           \r\n        }\r\n          return el\r\n    }\r\n    else{\r\n      return  item.salary.to \r\n    }\r\n  })\r\n      return {from:from, to:to}\r\n}\r\n\r\n \r\n\r\n  function getAvg(grades) {\r\n    const total = grades.reduce((acc, c) => acc + c, 0);\r\n    return Math.trunc(total / grades.length);\r\n  }\r\n\r\n\r\nconst vacancy =  (state = initialState, action)=>{\r\n  if(action.type ===\"SET_VACANCY_NAME\")\r\n  {\r\n      return {\r\n          ...state,\r\n          vacancyName:action.payload,\r\n      };\r\n  }\r\n  if(action.type ===\"SET_CURRENT_PAGE\")\r\n  {\r\n      return {\r\n          ...state,\r\n          currentPage:action.payload,\r\n      };\r\n  }\r\n    if(action.type ===\"ADD_ALL_VACANCY\")\r\n    {\r\n      console.log(action.payload.pages)\r\n        return {\r\n            ...state,\r\n            isLoaded:true,\r\n            vacancy:action.payload.items,\r\n            detailedVacancy: [],\r\n            pages:action.payload.pages\r\n        };\r\n    }\r\n    if(action.type ===\"ADD_ALL_VACANCY_2\")\r\n    {\r\n      debugger\r\n      let obj = {\r\n        ...state,\r\n        vacancy:[...state.vacancy, action.payload.items],\r\n\r\n    };\r\n      console.log(action.payload.pages)\r\n        return {\r\n            ...state,\r\n            vacancy:[...state.vacancy, ...action.payload.items],\r\n            //detailedVacancy: [],\r\n            pages:action.payload.pages\r\n        };\r\n    }\r\n    else if(action.type ===\"ADD_DETAILED_VACANCY\")\r\n    {\r\n        return {\r\n            ...state,\r\n            detailedVacancy:  [...state.detailedVacancy, action.payload],\r\n            isLoaded: state.detailedVacancy.length===state.vacancy.length-1 ? false : true\r\n        };\r\n    }\r\n    else if(action.type ===\"SET_ALL_DATA\")      \r\n    {\r\n      debugger\r\n        const items = state.detailedVacancy\r\n        let obj = {\r\n          ...state,\r\n          salaryStat: getSalaryStat(items, action.payload.currencies),\r\n          schedule: setSchedule(items),\r\n          experience: setExperience(items),\r\n          top10Skills: setTop10Skills(items),\r\n          salaryByExperience: setSalaryByExperience(items, action.payload.currencies),\r\n          cities: setCities(items),\r\n          isLoaded: false,\r\n          allDataLoaded:true\r\n     }\r\n        return obj\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nexport const getAllVacanciesOnAllPages = (pages, vacanciesName, currencies, region) => async (dispatch) => {\r\n  for (var item = 1; item <= pages; item++) {\r\n    await searchAPI.getAllVacanciesByName(vacanciesName, item, region).then(\r\n      response => {\r\n        dispatch(addAllVacancy2(response));\r\n        dispatch(getADetailedVacancies(response));\r\n      }\r\n    );\r\n    dispatch(setCurrentPage(item));\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Thunk\r\nexport const getAllVacancies = (vacanciesName, currencies, region) => (dispatch) => {\r\n  dispatch(addVacancyName(vacanciesName));\r\n  searchAPI.getAllVacanciesByName(vacanciesName, 0, region).then(\r\n    response => {\r\n      dispatch(addAllVacancy(response));\r\n      dispatch(getADetailedVacancies(response));\r\n      dispatch(getAllVacanciesOnAllPages(response.pages, vacanciesName, currencies, region));\r\n    }\r\n  );\r\n}\r\n\r\n\r\nexport const getADetailedVacancies=(vacancyItems)=>(dispatch)=>\r\n{\r\n const getCurrentVacancy =(id)=>(dispatch)=>{                  //получает элемент, делает запрос \r\n    return searchAPI.getVacancyById(id).then((response) => {\r\n        dispatch(addVacancyById(response))\r\n    })\r\n  } \r\n\r\n  vacancyItems.items.forEach(async (element) => {  \r\n    await dispatch(getCurrentVacancy(element.id));\r\n  })\r\n\r\n}\r\nexport default vacancy","export const addAllVacancy = (payload)=>({\r\n    type:'ADD_ALL_VACANCY',\r\n    payload\r\n})\r\n\r\nexport const addAllVacancy2 = (payload)=>({\r\n    type:'ADD_ALL_VACANCY_2',\r\n    payload\r\n})\r\n\r\nexport const addVacancyById = (payload)=>({\r\n    type:'ADD_DETAILED_VACANCY',\r\n    payload\r\n})\r\n\r\nexport const addAllData = (payload)=>({\r\n    type:'SET_ALL_DATA',\r\n    payload\r\n})\r\n\r\nexport const addVacancyName = (payload)=>({\r\n    type:'SET_VACANCY_NAME',\r\n    payload\r\n})\r\n\r\nexport const setCurrentPage = (payload)=>({\r\n    type:'SET_CURRENT_PAGE',\r\n    payload\r\n})","import * as React from 'react';\r\nimport './search.css'\r\nimport { useState } from \"react\";\r\n\r\nexport const Search =({dispatch,getAllVacancies,currencies,region})=>{\r\n    const [vacanciesName, setVacanciesName] = useState(\"\");\r\n    return(\r\n        <div className=\"search__wrapper\">\r\n          <div className='search__send'>\r\n            <button className=\"sendButton\" onClick={()=>{dispatch(getAllVacancies(vacanciesName,currencies,region))\r\n              }}>Поиск</button>\r\n          </div>\r\n          <div className=\"search\">\r\n            <input className=\"search__input\" \r\n              type=\"text\"\r\n              value={vacanciesName}\r\n              placeholder=\"Введите название вакансии\"\r\n              onChange={(e) => setVacanciesName(e.target.value)}>\r\n            </input>\r\n          </div>\r\n       </div>\r\n    )\r\n}","import React from 'react';\r\nimport './skillsChart.css'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n\r\n\r\nexport const SkillsChart = ({keySkills})=>{\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        BarElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n      );\r\n      \r\n       const options = {\r\n        indexAxis: 'y',\r\n        elements: {\r\n          bar: {\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Топ 10 навыков',\r\n          },\r\n        },\r\n      };\r\n      \r\n      const labels = keySkills.map(el=>el[0]);\r\n      \r\n       const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Частота',\r\n            data: keySkills.map(el =>el[1] ),\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.7)',\r\n          },\r\n         \r\n        ],\r\n      };\r\n\r\n    return(\r\n        <div className=\"skillsChart\">\r\n            <Bar  data={data} options={options} />\r\n        </div>\r\n        \r\n    )\r\n\r\n}","import React from 'react';\r\nimport './experienceChart.css'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const ExperienceChart = ({experience})=>{ \r\n const data = {\r\n  labels: ['1-3 года', '3-6 лет', 'без опыта', \"6 и более лет\"],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [experience.between1And3, experience.between3And6, experience.noExperience, experience.moreThan6],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n  return ( \r\n  <div className=\"experienceChart\">\r\n    <p>Опыт работы</p>\r\n    <Pie data={data} />\r\n  </div> )\r\n}","import React from 'react';\r\nimport './scheduleChart.css'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const ScheduleChart = ({schedule})=>{ \r\n const data = {\r\n  labels: [\"Удаленная работа\", \"Полный день\", \"Гибкий график\"],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [schedule.remote, schedule.fullDay, schedule.flexible],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n  return ( \r\n  <div className=\"scheduleChart\">\r\n    <p>График работы</p>\r\n    <Pie data={data} />\r\n  </div> )\r\n}","import React from 'react';\r\nimport \"./salaryByExperienceChart.css\"\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\n\r\nexport function SalaryByExperienceChart({experienceBySalary}) {\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n  \r\n   const options = {\r\n    indexAxis: 'y',\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Зарплата',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const labels = ['Без опыта ', '1-3 года', '3-6 лет', '6 и более лет'];\r\n  \r\n   const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Зарплата',\r\n        data: [experienceBySalary.AVGnoExperience,experienceBySalary.AVGbetween1And3,experienceBySalary.AVGbetween3And6,experienceBySalary.AVGmoreThan6],\r\n        borderColor: 'rgb(30, 20, 200)',\r\n        backgroundColor: 'rgba(30, 20, 200, 0.7)',\r\n      },\r\n  \r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"salaryByExperienceChart\">\r\n  <Bar options={options} data={data} />\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './CitiesChart.css'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n\r\n\r\nexport const CitiesChart = ({cities})=>{\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        BarElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n      );\r\n      \r\n       const options = {\r\n        indexAxis: 'y',\r\n        elements: {\r\n          bar: {\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Топ 10 городов',\r\n          },\r\n        },\r\n      };\r\n      \r\n      const labels = cities.map(el=>el[0]);\r\n      \r\n       const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Частота',\r\n            data: cities.map(el =>el[1] ),\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.7)',\r\n          },\r\n         \r\n        ],\r\n      };\r\n\r\n    return(\r\n      <div className=\"citiesChart-wrapper\">\r\n        <div className=\"citiesChart\">\r\n            <Bar data={data} options={options} />\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n// let canvas = document.querySelector(\".scene\");\r\n// var context = canvas.getContext('2d');\r\n// context.clearRect(0,0, canvas.width, canvas.height);","const ProgressBar = (props) => {\r\n    const { bgcolor, completed } = props;\r\n  \r\n    const containerStyles = {\r\n      height: '15px',\r\n      width: '20%',\r\n      backgroundColor: \"#e0e0de\",\r\n      borderRadius: 50,\r\n      margin: \"0 auto\",\r\n     \r\n    }\r\n  \r\n    const fillerStyles = {\r\n      height: '100%',\r\n      width: `${completed}%`,\r\n      backgroundColor: bgcolor,\r\n      borderRadius: 'inherit',\r\n      textAlign: 'right',\r\n      transition: 'width 1s ease-in-out',\r\n    }\r\n  \r\n    const labelStyles = {\r\n      padding:5,\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    }\r\n  \r\n    return (\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}>\r\n         <span style={labelStyles}>{`${completed}%`}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProgressBar;","import * as React from 'react';\r\nimport './statBlock.css'\r\n\r\nexport const StatBlock =({statElement, statName, icon, isVisible})=>{\r\n      \r\n    return(\r\n        <div className=\"Stat-block\">\r\n             <p className=\"Stat-name\">{statName}</p>\r\n\r\n            {isVisible ? <h1 className=\"Stat-element\">{icon}{statElement}</h1> : \"\"}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport html2pdf from 'html2pdf.js';\r\nimport './App.css';\r\nimport { getCurrency } from './api/api';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAllData } from './Redux/Actions/vacancyAC';\r\nimport { getAllVacancies } from './Redux/Reducers/vacancyReducer';\r\nimport { Search } from './Components/Search/search';\r\nimport { SkillsChart } from './Components/Charts/SkillsChart/SkillsChart';\r\nimport { ExperienceChart } from './Components/Charts/ExperienceChart/experienceChart';\r\nimport { ScheduleChart } from './Components/Charts/ScheduleChart/scheduleChart';\r\nimport { SalaryByExperienceChart } from './Components/Charts/SalaryByExperienceChart/salaryByExperienceChart';\r\nimport { CitiesChart } from './Components/Charts/CitiesChart/CitiesChart';\r\nimport ProgressBar from './Components/ProgressBar/progressBar';\r\nimport { StatBlock } from './Components/StatBlock/statBlock';\r\n\r\nconst regions = [\r\n  { code: 5, name: 'Азербайджан' },\r\n  { code: 16, name: 'Беларусь' },\r\n  { code: 28, name: 'Грузия' },\r\n  { code: 40, name: 'Казахстан' },\r\n  { code: 48, name: 'Кыргызстан' },\r\n  { code: 97, name: 'Узбекистан' },\r\n  { code: 113, name: 'Россия' },\r\n];\r\n\r\nfunction App() {\r\n  const { vacancy } = useSelector(state => ({ vacancy: state.vacancy.vacancy }));\r\n  const { top10Skills } = useSelector(state => ({ top10Skills: state.vacancy.top10Skills }));\r\n  const { experience } = useSelector(state => ({ experience: state.vacancy.experience }));\r\n  const { schedule } = useSelector(state => ({ schedule: state.vacancy.schedule }));\r\n  const { salaryStat } = useSelector(state => ({ salaryStat: state.vacancy.salaryStat }));\r\n  const { salaryByExperience } = useSelector(state => ({ salaryByExperience: state.vacancy.salaryByExperience }));\r\n  const { cities } = useSelector(state => ({ cities: state.vacancy.cities }));\r\n  const { vacancyName } = useSelector(state => ({ vacancyName: state.vacancy.vacancyName }));\r\n  const { pageLoad } = useSelector(state => ({ pageLoad: state.vacancy.currentPage }));\r\n  const { allPage } = useSelector(state => ({ allPage: state.vacancy.pages }));\r\n  const { allDataLoaded } = useSelector(state => ({ allDataLoaded: state.vacancy.allDataLoaded }));\r\n\r\n  const [currencies, setCurrencies] = useState({});\r\n  const [selectedRegion, setSelectedRegion] = useState(113); \r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleExportButtonClick = () => {\r\n    if (pageLoad === allPage && vacancy.length === 0) {\r\n      setModalOpen(true);\r\n    }\r\n    else{\r\n      exportToPDF()\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getCurrency.getCurrencyValues().then(response => { \r\n      setCurrencies(response.conversion_rates);\r\n    });\r\n  }, []);\r\n\r\n  const handleSetClick = () => {\r\n    dispatch(addAllData({ currencies }));\r\n  };\r\n\r\n  const handleRegionChange = (event) => {\r\n    setSelectedRegion(event.target.value);\r\n\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const input = document.getElementById('app-container'); // Замените 'app-container' на ID вашего контейнера\r\n    html2pdf(input, {\r\n      margin: 10,\r\n      filename: 'stats.pdf',\r\n      image: { type: 'png', quality: 1 },\r\n      html2canvas: { dpi: 300, letterRendering: true },\r\n      jsPDF: { unit: 'mm', format: 'a2', orientation: 'portrait' }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <body className=\"app__body\">\r\n      <div className=\"app\">\r\n        <div id=\"app-container\" className=\"app__container\">\r\n          <header className=\"header\">\r\n            <div className=\"header__container\">\r\n              <div className='search__container'>\r\n                <Search dispatch={dispatch} getAllVacancies={getAllVacancies} currencies={currencies} region={selectedRegion} />\r\n              </div>\r\n              <div className=\"region-selector__container\">\r\n                <label className=\"region-selector__label\" htmlFor=\"region-selector\">Регион:</label>\r\n                <div class=\"custom-select\">\r\n                  <select id=\"region-selector\" className=\"region__selector\" onChange={handleRegionChange} value={selectedRegion}>\r\n                    {regions.map(region => (\r\n                      <option key={region.code} value={region.code}>\r\n                        {region.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <div class=\"select-arrow\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <main className=\"main\">\r\n            {pageLoad !== allPage ? (\r\n              <ProgressBar\r\n                  className=\"progress-bar\"\r\n                  bgcolor={\"#6a1b9a\"}\r\n                  completed={allPage > 1 ? Math.trunc((pageLoad / (allPage - 1)) * 100) : 100}\r\n              />\r\n              ) : \"\"}\r\n              {(pageLoad===allPage && vacancy.length !== 0 )  ? <button className=\"show-data-btn\" onClick={handleSetClick}>Показать данные</button> : \"\"}\r\n              <div className=\"main__stat\">\r\n                {vacancy.length !== 0 ? <p>Количество вакансий по запросу \"{vacancyName}\": {vacancy.length}</p> : pageLoad ? \"По вашему запросу ничего не найдено\" : \"\"}\r\n                <div className=\"main__stat-salary\">\r\n                  <StatBlock isVisible={allDataLoaded} statName=\"Количество вакансий\" statElement={vacancy.length}></StatBlock>\r\n                  <StatBlock isVisible={allDataLoaded} statName=\"Максимальная З/П\" statElement={salaryStat.max} icon={\"$\"}></StatBlock>\r\n                  <StatBlock isVisible={allDataLoaded} statName=\"Средняя З/П\" statElement={salaryStat.middle} icon={\"$\"}></StatBlock>\r\n                  <StatBlock isVisible={allDataLoaded} statName=\"Минимальная З/П\" statElement={salaryStat.min} icon={\"$\"}></StatBlock>\r\n                </div>\r\n              </div>\r\n                <div className=\"main__stat-charts\">\r\n                    <div className='main__stat-up'>\r\n                        <div className=\"chart-wrapper\">\r\n                          <ExperienceChart experience={experience} />\r\n                        </div>\r\n                        <div className=\"chart-wrapper\">\r\n                          <ScheduleChart schedule={schedule} />\r\n                        </div>\r\n                        <div className=\"chart-wrapper\">\r\n                        <CitiesChart cities={cities} />\r\n                      </div>\r\n                      </div>\r\n                    <div className='main__stat-down'>\r\n                      <div className=\"chart-wrapper\">\r\n                        <SkillsChart keySkills={top10Skills} />\r\n                      </div>\r\n                      <div className=\"chart-wrapper\">\r\n                        <SalaryByExperienceChart experienceBySalary={salaryByExperience} />\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n          </main>\r\n          <footer className=\"footer\">\r\n            <p className=\"footer__info\">Этот веб-сервис для аналитики рынка труда. Здесь вы можете получить информацию о вакансиях, зарплатах, навыках и других аспектах рынка труда.</p>\r\n            <button\r\n                className={`export-btn ${pageLoad === allPage && vacancy.length !== 0 ? 'disabled' : ''}`}\r\n                onClick={handleExportButtonClick}\r\n              >\r\n                Экспортировать в PDF\r\n              </button>\r\n              {modalOpen && (\r\n                <div className=\"modal\">\r\n                  <div className=\"modal-content\">\r\n                    <span className=\"close\" onClick={() => setModalOpen(false)}>&times;</span>\r\n                    <p>Для начала вам нужно получить статистику.</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport vacancy from './Reducers/vacancyReducer';\r\n\r\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer=combineReducers({\r\n    vacancy:vacancy, \r\n});\r\n\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store';\r\nimport { Provider } from 'react-redux';\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}